#include frag.jsl
#include color.jsl
#include math.jsl
#include noise.jsl

uniform sampler2D texture1;
uniform sampler2D texture2;
uniform vec2 rcpFrame;

const float weightBright = 0.1;
const float weightDark = 0.5;

void main() {
  vec3 c1 = texture2D(texture1, uv).xyz;
  vec3 c2 = texture2D(texture2, uv).xyz;
  c1 = max(vec3(0), c1);
  c2 = max(vec3(0), c2);

  float l1 = pow(c1.x * c1.y * c1.z, 1.0 / 3.0);
  float l2 = (c2.x + c2.y + c2.z) / 3.0;

  vec3 c = c1;
  vec3 bright = sqrt(0.5 * (pow2(c) + pow2(c2)));
  c = mix(c, bright, saturate(weightBright * l2));

  vec3 dark = sqrt(c * c2);
  c = mix(c, dark, saturate(weightDark * (1.0 - l1)));

  RETURN(vec4(c, 1.0));
}
