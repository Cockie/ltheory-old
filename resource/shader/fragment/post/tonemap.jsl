#include frag.jsl
#include color.jsl
#include math.jsl
#include noise.jsl

uniform sampler2D texture;

#if 0
const float kA = 1.15; // 1.50
const float kB = 1.00; // 1.25
const float kS = 0.25;
#else
const float kA = 1.50; // 1.50
const float kB = 1.25; // 1.25
//const float kS = 0.00;
#endif

vec3 Levels(vec3 c, vec3 lower, vec3 upper) {
  return (c - lower) / (upper - lower);
}

float Vignette(float p) {
  return (1.0 - exp(-p * (1.0 - abs(2.0 * uv.x - 1.0)))) *
         (1.0 - exp(-p * (1.0 - abs(2.0 * uv.y - 1.0))));
}

void main() {
  vec3 c = texture2D(texture, uv).xyz;
  // c *= max(vec3(0.0), (1.0 + kS * (c / avg(c) - 1.0)));
  c = 1.0 - exp(-kA * pow(c, vec3(kB)));
  // c = Levels(c, vec3(2.0 / 256.0), vec3(254.0 / 256.0));
  RETURN(vec4(saturate(c), 1.0));
}
