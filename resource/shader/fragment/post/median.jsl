#include frag.jsl
#include math.jsl
#include color.jsl

uniform sampler2D texture;
uniform int radius;
uniform vec2 rcpFrame;
uniform float variance;

void main() {
  vec4 final = texture2D(texture, uv);
  vec4 cMin = final; 
  vec4 cMax = final; 
  float totalWeight = 1;

  for (int y = -radius; y <= radius; ++y) {
    for (int x = -radius; x <= radius; ++x) {
      if ((x != 0 || y != 0)) {
        vec2 offset = vec2(float(x), float(y));
        vec2 coord = uv + rcpFrame * offset;
        if (coord.x >= 0.0 && coord.x <= 1.0 && coord.y >= 0.0 && coord.y <= 1.0) {
          vec4 c = texture2D(texture, coord);
          float w = exp(-pow2(length(offset) / variance));
          cMin = mix(cMin, min(c, cMin), w);
          cMax = mix(cMax, max(c, cMax), w);
          final += c;
          totalWeight += 1.0;
        }
      }
    }
  }

  RETURN(vec4(cMax));
}
