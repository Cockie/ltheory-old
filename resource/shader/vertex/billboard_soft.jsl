#include vert.jsl
#include math.jsl

uniform vec3 eye;
uniform float billboardSize;
uniform float zOffset;

VERT_OUT float opacityMult;
VERT_OUT vec3 attrib;
VERT_OUT vec3 position;
VERT_OUT vec4 ndcPos;

void main() {
  VS_PROLOGUE;

  vec3 toCam = normalize(eye - worldPos.xyz);
  vec3 up = normalize(ortho(toCam));
  vec3 right = cross(toCam, up);

  opacityMult = 1.;
  attrib = vertex_normal;

  worldPos.xyz += billboardSize * u * right;
  worldPos.xyz += billboardSize * v * up;
  worldPos.xyz += (eye - worldPos.xyz) / zOffset;

  gl_Position = PROJ * (VIEW * worldPos);
  linearDepth = gl_Position.z;
  gl_Position.z = LogDepth(gl_Position.z, gl_Position.w);

  ndcPos = gl_Position;
  position = worldPos.xyz;
}
