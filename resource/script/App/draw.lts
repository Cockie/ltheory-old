type Line
  Vec2 p1
  Vec2 p2

type DrawApp
  Vec2 downPos
  Bool down false
  List lines List

  function Void PreDraw (Widget self)
    DrawPanel self.pos self.size 0.05 1 1 0

  function Void PostDraw (Widget self)
    var m Cursor_Get
    var c 4.0 * Colors:Primary
    Draw Icon/Cursors:Cross m 12 c 0.5

    var font Fonts:Heading
    DrawText font "Draw" (Vec2 self.size.x / 2.0 self.size.y - 72.0) 92 0.1 1 true

    if down
      Draw (Glyph_Line downPos m 1 1) 0 1 c 1.0

    for i 0 i < lines.Size (++ i)
      var line (Line (lines.Get i))
      Draw (Glyph_Circle 0 1 1 1) line.p1 10 c 1.0
      Draw (Glyph_Circle 0 1 1 1) line.p2 10 c 1.0
      Draw (Glyph_Line line.p1 line.p2 1 1) 0 1 c 0.1

  function Void PostUpdate (Widget self)
    if Mouse_LeftPressed
      downPos = Cursor_Get
      down = true
    if Mouse_LeftReleased
      lines += (Line downPos Cursor_Get)
      down = false

    if Mouse_RightDown
      var rng (RNG_MTG Int_Random)
      var index (rng.Int lines.Size)
      var p1
        switch
          rng.Float < 0.5
            p1 (Line (lines.Get index))
          otherwise
            p2 (Line (lines.Get index))
      var p2 2.0 * rng.Exp ^ 2.5 * (Normalize (rng.Vec2 -1.0 1.0)) + p1

      var kA 3.0
      var kB 200.0

      for i 0 i < 5 (++ i)
        for j 0 j < lines.Size (++ j)
          var p1to (p1 (Line (lines.Get j))) - p2
          var p2to (p2 (Line (lines.Get j))) - p2
          if j != index
            p2 += kB * p1to / ((p1to.Length ^ kA + 1.0)
            p2 += kB * p2to / ((p2to.Length ^ kA + 1.0)

      += lines (Line p1 p2)

function Data Main ()
  widget:Create
    Layer
      Compositor_Basic 0.1 0.2 (Vec3 0.45 0.00 0.9)
      Mesh_Quad
      1.0
      Custom Widget DrawApp
